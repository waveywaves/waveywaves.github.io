{"version":3,"sources":["Blog/Body/Post/Post.tsx","Blog/Body/Body.tsx","Blog/Header/StickyHeader.tsx","P5Wrapper/P5Wrapper.tsx","Blog/Header/HeaderSketch.tsx","Blog/Header/Header.tsx","Blog/Blog.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Post","className","Body","Container","StickyHeader","href","React","Component","p5","require","P5Wrapper","props","wrapper","state","sketch","canvas","this","myCustomRedrawAccordingToNewPropsHandler","setState","remove","ref","undefined","removeChild","childNodes","p","width","window","innerWidth","height","innerHeight","setup","createCanvas","draw","background","fill","textSize","textAlign","text","HeaderSketch","Header","isSticky","document","addEventListener","Math","round","scrollY","Blog","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5ef9a3a4.chunk.js","sourcesContent":["import React from 'react';\nimport './Post.css'\nimport Row from 'react-bootstrap/Row';\n\nfunction Post() {\n  return (\n    <div className=\"Post\">\n      <h3>\n        Lorem Ipsum Dimsum\n      </h3>\n      <h5>\n        Dimsum tho\n      </h5>\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent finibus vel odio vel pulvinar. Vivamus elementum venenatis erat, ut imperdiet nunc ultricies id. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nisi tortor, efficitur nec tincidunt id, finibus eu tellus. Praesent ultricies dui ac lectus bibendum blandit. Cras dui elit, feugiat quis ornare a, egestas a quam. Praesent id felis vel enim pharetra rhoncus nec in tortor. Pellentesque condimentum massa ac arcu interdum, eget faucibus elit laoreet. Donec lacinia ipsum massa, vel fermentum ex blandit et. Sed in ante at mi pulvinar cursus. Aliquam vel placerat elit, vel ultrices urna. Praesent a magna a nisi faucibus semper sit amet eget quam. Phasellus lacinia, ante non tristique mattis, ligula elit fringilla magna, ut interdum velit elit ac purus. Mauris commodo lorem tempor, dictum massa at, aliquam velit.\n\nFusce enim ipsum, rhoncus sit amet ipsum at, sodales varius justo. Quisque non nunc rhoncus, molestie lorem at, sollicitudin nibh. Proin pharetra velit orci, non ullamcorper tellus finibus eu. Ut auctor odio sagittis nibh pulvinar, vel malesuada augue dictum. Suspendisse a tempor lacus. Sed mauris turpis, facilisis a magna sit amet, viverra vulputate augue. Vivamus feugiat libero eu turpis luctus, vel fermentum purus porttitor. Donec pretium, sapien et efficitur finibus, mi lectus pulvinar ex, ut consequat turpis erat vel lectus.\n\nVestibulum pellentesque dignissim dui vel dignissim. \n      </p>\n    </div>\n  );\n}\n\nexport default Post;\n","import React from 'react';\nimport './Body.css'\n\nimport Post from './Post/Post'\nimport Container from 'react-bootstrap/Container';\n\nfunction Body() {\n  return (\n    <Container className=\"Body\">\n        <Post/>\n        <Post/>\n        <Post/>\n    </Container>\n  );\n}\n\nexport default Body;\n","import React from 'react';\nimport './Header.css';\n\nclass StickyHeader extends React.Component {\n  render() {\n    return (\n      <div className=\"stickyHeaderInner\">\n            <a href=\"https://waveywaves.github.io\">\n              waveywaves\n            </a>\n            <a href=\"https://waveywaves.github.io\">\n              • Work \n            </a>\n            <a href=\"https://waveywaves.github.io\">\n              • Play\n            </a>\n            <a href=\"https://waveywaves.github.io\">\n              • Info \n            </a>\n      </div>\n    );\n  }\n  \n}\n\nexport default StickyHeader;\n","import { stat } from 'fs';\nimport React, { Component } from 'react';\nimport { statement } from '@babel/template';\nconst p5 = require('p5');\n\nexport interface P5WrapperProps {\n  sketch: (p: any) => void;\n}\nexport interface P5WrapperState {\n  sketch: (p: any) => void;\n  canvas: any;\n  wrapper: HTMLElement;\n}\n\nexport default class P5Wrapper extends Component <P5WrapperProps, P5WrapperState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state  = {\n      sketch: props.sketch,\n      canvas: null,\n      wrapper: null\n    };\n  }\n\n  wrapper: HTMLElement;\n\n  componentDidMount() {\n    const canvas = new p5(this.state.sketch, this.wrapper);\n    if( canvas.myCustomRedrawAccordingToNewPropsHandler ) {\n      canvas.myCustomRedrawAccordingToNewPropsHandler(this.props);\n    }\n    this.setState({\n      canvas: canvas,\n      wrapper: this.wrapper\n    })\n  }\n\n  static getDerivedStateFromProps(props: P5WrapperProps, state: P5WrapperState){\n    let canvas = state.canvas;\n    if(state.sketch !== props.sketch && canvas != undefined){\n      state.wrapper.removeChild(state.wrapper.childNodes[0]);\n      canvas.remove();\n      canvas = new p5(props.sketch, state.wrapper)\n      return {\n        ...state,\n        sketch: props.sketch,\n        canvas: canvas\n      };\n    }\n    if( canvas && canvas.myCustomRedrawAccordingToNewPropsHandler ) {\n      canvas.myCustomRedrawAccordingToNewPropsHandler(props);\n    }\n    return state;\n  }\n\n\n  componentWillUnmount() {\n    if (this.state.canvas != null) {\n      this.state.canvas.remove();\n    }\n\t}\n\n  render() {\n    return <div ref={wrapper => this.wrapper = wrapper}></div>;\n  }\n}","import React, {Component, RefObject} from 'react';\nimport P5Wrapper from '../../P5Wrapper/P5Wrapper'\nimport { element, func } from 'prop-types';\nimport p5 from 'p5'\n\nvar sketch = (p: p5) => {\n  var width = window.innerWidth\n  var height = window.innerHeight*0.1\n  p.setup = function() {\n    p.createCanvas(width, height)\n  };\n\n  p.draw = function() {\n    p.background(0);\n    p.fill(255);\n    p.textSize(100)\n    p.textAlign(\"center\")\n    p.text(\"WAVEYWAVES\", width/2, height/2)\n  };\n}\n\ninterface IProps {\n}\n\ninterface IState {\n  sketch(p: any) : void\n}\n\nclass HeaderSketch extends Component {\n  state: IState;\n  \n  constructor(props : IProps) {\n    super(props)\n    this.state = {\n      sketch: sketch\n    }\n  }\n\n  \n  render() {\n    return (\n      <div>\n        <P5Wrapper sketch={this.state.sketch}/>\n      </div>\n    )\n  }\n}\n\nexport default HeaderSketch;\n","import React from 'react';\nimport './Header.css';\nimport StickyHeader from './StickyHeader'\nimport HeaderSketch from './HeaderSketch'\n\ninterface IProps {\n}\n\ninterface IState {\n  isSticky: boolean\n}\n\nclass Header extends React.Component {\n  state : IState\n  props: IProps\n\n  constructor(props: IProps){\n    super(props)\n    this.state = {\n      isSticky: false\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('scroll', () => {\n      const isSticky = Math.round(window.scrollY) >= 100;\n      if (isSticky !== this.state.isSticky) {\n          this.setState({ \n            isSticky: isSticky,\n          })\n      }\n    });\n  }\n\n  render(){\n\n    return (\n      <div>\n        <div>\n          <HeaderSketch />\n        </div>\n        <div className={this.state.isSticky ? 'sticky' : 'stickyHeader'}>\n          <StickyHeader/> \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport Body from './Body/Body';\nimport Header from './Header/Header'\n\nimport './Blog.css'\n\nimport \"./Blog.css\"\n\n\nfunction Blog() {\n  return (\n    <div>\n        <Header/>\n        <Body/>\n    </div>\n  );\n}\n\nexport default Blog;\n ","import React from 'react';\nimport './App.css';\nimport Blog from './Blog/Blog';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Blog/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}